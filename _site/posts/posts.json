[
  {
    "path": "posts/2021-03-07-exploratory-analysis-ii/",
    "title": "7: Exploratory-analysis-II",
    "description": "Data visualization, part 2.  Code for Quiz 8.",
    "author": [],
    "date": "2021-03-07",
    "categories": [],
    "contents": "\n\nContents\nQuestion: modify slide 51\nQuestion: modify facet-ex-2\nQuestion: spend_time\nQuestion: Patchwork 2\n\nLoad the R package we will use.\n\n\nlibrary(tidyverse)\nlibrary(patchwork)  #install before using \n\n\n\nQuiz questions\nReplace all the ???s. These are answers on your moodle quiz.\nRun all the individual code chunks to make sure the answers in this file correspond with your quiz answers\nAfter you check all your code chunks run then you can knit it. It won’t knit until the ??? are replaced\nThe quiz assumes that you have watched the videos, downloaded (to your examples folder) and worked through the exercises in exercises_slides-50-61.Rmd\nPick one of your plots to save as your preview plot. Use the ggsave command at the end of the chunk of the plot that you want to preview.\nQuestion: modify slide 51\nCreate a plot with the mpg dataset\nadd points with geom_point\nassign the variable displ to the x-axis\nassign the variable hwy to the y-axis\n\nadd facet_wrap to split the data into panels based on the manufacturer\n\nggplot(data = ???) + \n   ???(aes(x = ???, y = ???)) +\n   ???(facets = vars(???))\n\nQuestion: modify facet-ex-2\nCreate a plot with the mpg dataset\nadd bars with with geom_bar\nassign the variable manufacturer to the y-axis\n\nadd facet_grid to split the data into panels based on the class\nlet scales vary across columns\nlet space taken up by panels vary by columns\n\n\nggplot(???) + \n  ???(aes(y = ???)) + \n  ???(vars(???), scales = \"???\", space = \"???\")\n\nQuestion: spend_time\nTo help you complete this question use:\nthe patchwork slides and\nthe vignette: https://patchwork.data-imaginist.com/articles/patchwork.html\nDownload the file spend_time.csv from moodle into directory for this post. Or read it in directly:\nread_csv(\"https://estanny.com/static/week8/spend_time.csv\")\nspend_time contains 10 years of data on how many hours Americans spend each day on 5 activities\nread it into spend_time\n\n\nspend_time  <- read_csv(\"???\")\n\n\n\nStart with spend_time\nextract observations for SEE QUIZ\nTHEN create a plot with that data\nADD a barchart with with geom_col\nassign activity to the x-axis\nassign avg_hours to the y-axis\nassign activity to fill\n\nADD scale_y_continuous with breaks every hour from 0 to 6 hours\nADD labs to\nset subtitle to SEE QUIZ\nset x and y to NULL so they won’t be labeled\n\nassign the output to p1\ndisplay p1\n\np1  <- spend_time %>% filter(year == \"???\")  %>% \nggplot() + \n  ???(???(x = ???, y = ???, ??? = activity)) +\n  ???(breaks = seq(0, 6, by = 1)) +\n  labs(subtitle = \"???\", x = NULL, y = NULL)\n\np1 \n\nStart with spend_time\nTHEN create a plot with it\nADD a barchart with with geom_col\nassign year to the x-axis\nassign avg_hours to the y-axis\nassign activity to fill\n\nADD labs to\nset subtitle to “Avg hours per day: 2010-2019”\nset x and y to NULL so they won’t be labeled\n\nassign the output to p2\ndisplay p2\n\np2  <- ???  %>% \nggplot() + \n  geom_col(aes(x = year, y = avg_hours, fill = activity)) +\n  ???(subtitle  = \"Avg hours per day: 2010-2019\", x = NULL, y = NULL) \n\np2\n\nUse patchwork to display p1 on top of p2\nassign the output to p_all\ndisplay p_all\n\np_all  <-  ??? / ??? \n\n???\n\nStart with p_all\nAND set legend.position to ‘none’ to get rid of the legend\nassign the output to p_all_no_legend\ndisplay p_all_no_legend\n\np_all_no_legend  <- p_all & theme(??? = 'none')\np_all_no_legend\n\nStart with p_all_no_legend\nsee how annotate the composition here: https://patchwork.data-imaginist.com/reference/plot_annotation.html\nADD plot_annotation set\ntitle to “How much time Americans spent on selected activities”\ncaption to “Source: American Time of Use Survey, https://data.bls.gov/cgi-bin/surveymost?tu”\n\n\np_all_no_legend  +\n ???(??? = \"How much time Americans spent on selected activities\", \n                  ??? = \"Source: American Time of Use Survey, https://data.bls.gov/cgi-bin/surveymost?tu\")\n\nQuestion: Patchwork 2\nuse spend_time from last question patchwork slides\nStart with spend_time\nextract observations for SEE QUIZ\nTHEN create a plot with that data\nADD points with geom_point\nassign year to the x-axis\nassign avg_hours to the y-axis\n\nADD line with geom_smooth\nassign year to the x-axis\nassign avg_hours to the y-axis\n\nADD breaks on for every year on x axis with with scale_x_continuous\nADD labs to\nset subtitle to SEE QUIZ\nset x and y to NULL so x and y axes won’t be labeled\n\nassign the output to p4\ndisplay p4\n\np4  <- \nspend_time %>% ???(activity == \"???\")  %>% \nggplot() + \n  ???(aes(x = year, y = avg_hours)) ???\n  ???(aes(??? = year, ??? = avg_hours)) +\n  ???(breaks = seq(2010, 2019, by = 1)) +\n  ???(subtitle = \"???\", x = NULL, y = NULL) \n\np4\n\nStart with p4\nADD coord_cartesian to change range on y axis to 0 to 6\nassign the output to p5\ndisplay p5\n\n\np5 ???  p4 + ???(ylim = c(0, 6))\np5\n\n\n\nStart with spend_time\ncreate a plot with that data\nADD points with geom_point\nassign year to the x-axis\nassign avg_hours to the y-axis\nassign activity to color\nassign activity to group\n\nADD line with geom_smooth\nassign year to the x-axis\nassign avg_hours to the y-axis\nassign activity to color\nassign activity to group\n\nADD breaks on for every year on x axis with with scale_x_continuous\nADD coord_cartesian to change range on y axis to 0 to 6\nADD labs to\nset x and y to NULL so they won’t be labeled\n\nassign the output to p6\ndisplay p6\n\np6   <- \n spend_time  %>% \nggplot() + \n  ???(aes(x = year, y = avg_hours, color = activity, ??? = activity)) +\n  ???(aes(x = year, y = avg_hours, color = activity, group = activity)) +\n  ???(breaks = seq(2010, 2019, by = 1)) +\n  ???(ylim = c(0, 6)) + \n  labs(x = NULL, y = NULL) \n\np6\n\nUse patchwork to display p4 and p5 on top of p6\n\n??? p4 | p5 ??? / p6 \n\n\n\n\n",
    "preview": "posts/2021-03-07-exploratory-analysis-ii/preview.png",
    "last_modified": "2021-03-14T14:15:10-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-exploratory-analysis/",
    "title": "6: Exploratory analysis",
    "description": "Data visualization, part 1.  Code for Quiz 7.",
    "author": [],
    "date": "2021-03-06",
    "categories": [],
    "contents": "\n\nContents\nQuestion: modify slide 34\nQuestion: modify intro-slide 35\nQuestion: modify intro-slide 36\nQuestion: modify geom-ex-1\nQuestion: modify geom-ex-2\nQuestion: modify stat-slide-40\nQuestion: modify stat-slide-41\nQuestion: modify stat-slide-43\nQuestion: modify answer to stat-ex-2\n\nLoad the R package we will use.\n\n\nlibrary(tidyverse)\n\n\n\nQuiz questions\nReplace all the ???s. These are answers on your moodle quiz.\nRun all the individual code chunks to make sure the answers in this file correspond with your quiz answers\nAfter you check all your code chunks run then you can knit it. It won’t knit until the ??? are replaced\nThe quiz assumes you have watched the videos had worked through the exercises in exercises_slides-1-49.Rmd\nPick one of your plots to save as your preview plot. Use the ggsave command at the end of the chunk of the plot that you want to preview.\nQuestion: modify slide 34\nCreate a plot with the faithful dataset\nadd points with geom_point\nassign the variable eruptions to the x-axis\nassign the variable waiting to the y-axis\ncolour the points according to whether waiting is smaller or greater than SEE QUIZ\n\n\nggplot(???) + \n   ???(aes(x = ???, y = ???, \n                  colour = ??? > ???))   \n\nQuestion: modify intro-slide 35\nCreate a plot with the faithful dataset\nadd points with geom_point\nassign the variable eruptions to the x-axis\nassign the variable waiting to the y-axis\nassign the colour SEE QUIZ to all the points\n\n\nggplot(???) + \n   ???(aes(x = ???, y = ???),\n              colour = \"???\")   \n\nQuestion: modify intro-slide 36\nCreate a plot with the faithful dataset\nuse geom_histogram() to plot the distribution of waiting time\nassign the variable waiting to the x-axis\n\n\nggplot(???) + \n   ???(aes(x = ???))   \n\nQuestion: modify geom-ex-1\nSee how shapes and sizes of points can be specified here\nCreate a plot with the faithful dataset\nadd points with geom_point\nassign the variable eruptions to the x-axis\nassign the variable waiting to the y-axis\nset the shape of the points to SEE QUIZ\nset the point size to SEE QUIZ\nset the point transparency SEE QUIZ\n\n\nggplot(???) + \n   ???(aes(x = ???, y = ???), \n   shape = \"???\", size = ???, alpha =???)   \n\nQuestion: modify geom-ex-2\nCreate a plot with the faithful dataset\nuse geom_histogram() to plot the distribution of the eruptions (time)\nfill in the histogram based on whether eruptions are greater than or less than 3.2 minutes\n\nggplot(???) + \n   ???(aes(x = ???, fill = ??? > ??? ))   \n\nQuestion: modify stat-slide-40\nCreate a plot with the mpg dataset\nadd geom_bar() to create a bar chart of the variable manufacturer\n\nggplot(???) + \n   ???(aes(x = ???))   \n\nQuestion: modify stat-slide-41\nchange code to count and to plot the variable manufacturer instead of class\n\nmpg_counted <- mpg %>% \n  count(???, name = 'count')\nggplot(mpg_counted) + \n  geom_bar(aes(x = ???, y = count), stat = 'identity')\n\nQuestion: modify stat-slide-43\nchange code to plot bar chart of each manufacturer as a percent of total\nchange class to manufacturer\n\n???(mpg) + \n  geom_bar(aes(x = ???, y = ???(100 * count / sum(count))))\n\nQuestion: modify answer to stat-ex-2\nFor reference see examples.\nUse stat_summary() to add a dot SEE QUIZ at the median of each group\ncolor the dot SEE QUIZ\nmake the shape of the dot SEE QUIZ\nmake the dot size SEE QUIZ\n\nggplot(mpg) + \n  geom_jitter(aes(x = class, y = hwy), width = 0.2) +\n  stat_???(aes(x = class, y = hwy), geom = \"point\", \n  fun = \"???\", color = \"???\", \n  shape = \"???\", size = ??? )\n\n\n\n\n",
    "preview": "posts/2021-03-06-exploratory-analysis/preview.png",
    "last_modified": "2021-03-06T22:05:57-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-27-joining-data/",
    "title": "5: Joining data",
    "description": "Code for Quiz 6, more dplyr and our first interactive chart using echarts4r.",
    "author": [],
    "date": "2021-02-27",
    "categories": [],
    "contents": "\n\nContents\nSteps 1-6\nQuestion: join_ticker\nQuestion: summarize_industry\nQuestion: inline_ticker\nSteps 7-11\n\nSteps 1-6\nLoad the R packages we will use.\n\n\nlibrary(tidyverse)\nlibrary(echarts4r)  #install this package before using\nlibrary(hrbrthemes) #install this package before using\n\n\n\nRead the data in the files, drug_cos.csv, health_cos.csv in to R and assign to the variables drug_cos and health_cos, respectively\n\n\ndrug_cos  <- read_csv(\"https://estanny.com/static/week6/drug_cos.csv\")\nhealth_cos  <- read_csv(\"https://estanny.com/static/week6/health_cos.csv\")\n\n\n\nUse glimpse to get a glimpse of the data\n\n\ndrug_cos %>% glimpse()\n\n\nRows: 104\nColumns: 9\n$ ticker       <chr> \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\"…\n$ name         <chr> \"Zoetis Inc\", \"Zoetis Inc\", \"Zoetis Inc\", \"Zoet…\n$ location     <chr> \"New Jersey; U.S.A\", \"New Jersey; U.S.A\", \"New …\n$ ebitdamargin <dbl> 0.149, 0.217, 0.222, 0.238, 0.182, 0.335, 0.366…\n$ grossmargin  <dbl> 0.610, 0.640, 0.634, 0.641, 0.635, 0.659, 0.666…\n$ netmargin    <dbl> 0.058, 0.101, 0.111, 0.122, 0.071, 0.168, 0.163…\n$ ros          <dbl> 0.101, 0.171, 0.176, 0.195, 0.140, 0.286, 0.321…\n$ roe          <dbl> 0.069, 0.113, 0.612, 0.465, 0.285, 0.587, 0.488…\n$ year         <dbl> 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,…\n\nhealth_cos %>% glimpse()  \n\n\nRows: 464\nColumns: 11\n$ ticker      <chr> \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\",…\n$ name        <chr> \"Zoetis Inc\", \"Zoetis Inc\", \"Zoetis Inc\", \"Zoeti…\n$ revenue     <dbl> 4233000000, 4336000000, 4561000000, 4785000000, …\n$ gp          <dbl> 2581000000, 2773000000, 2892000000, 3068000000, …\n$ rnd         <dbl> 427000000, 409000000, 399000000, 396000000, 3640…\n$ netincome   <dbl> 245000000, 436000000, 504000000, 583000000, 3390…\n$ assets      <dbl> 5711000000, 6262000000, 6558000000, 6588000000, …\n$ liabilities <dbl> 1975000000, 2221000000, 5596000000, 5251000000, …\n$ marketcap   <dbl> NA, NA, 16345223371, 21572007994, 23860348635, 2…\n$ year        <dbl> 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, …\n$ industry    <chr> \"Drug Manufacturers - Specialty & Generic\", \"Dru…\n\nWhich variables are the same in both data sets\n\n\nnames_drug  <- drug_cos  %>%  names() \nnames_health  <- health_cos  %>%  names() \nintersect(names_drug, names_health)\n\n\n[1] \"ticker\" \"name\"   \"year\"  \n\nSelect subset of variables to work with\nFor drug_cos select (in this order): ticker, year, grossmargin\nExtract observations for 2018\nAssign output to drug_subset\n\nFor health_cos select (in this order): ticker, year, revenue, gp, industry\nExtract observations for 2018\nAssign output to health_subset\n\n\n\ndrug_subset  <- drug_cos  %>% \n  select(ticker, year, grossmargin)  %>% \n  filter(year == 2018)\n\nhealth_subset  <- health_cos  %>%\n  select(ticker, year, revenue, gp, industry)  %>% \n  filter(year == 2018)\n\n\n\nKeep all the rows and columns drug_subset join with columns in health_subset\n\n\ndrug_subset  %>% left_join(health_subset)\n\n\n# A tibble: 13 x 6\n   ticker  year grossmargin   revenue        gp industry              \n   <chr>  <dbl>       <dbl>     <dbl>     <dbl> <chr>                 \n 1 ZTS     2018       0.672   5.82e 9   3.91e 9 Drug Manufacturers - …\n 2 PRGO    2018       0.387   4.73e 9   1.83e 9 Drug Manufacturers - …\n 3 PFE     2018       0.79    5.36e10   4.24e10 Drug Manufacturers - …\n 4 MYL     2018       0.35    1.14e10   4.00e 9 Drug Manufacturers - …\n 5 MRK     2018       0.681   4.23e10   2.88e10 Drug Manufacturers - …\n 6 LLY     2018       0.738   2.46e10   1.81e10 Drug Manufacturers - …\n 7 JNJ     2018       0.668   8.16e10   5.45e10 Drug Manufacturers - …\n 8 GILD    2018       0.781   2.21e10   1.73e10 Drug Manufacturers - …\n 9 BMY     2018       0.71    2.26e10   1.60e10 Drug Manufacturers - …\n10 BIIB    2018       0.865   1.35e10   1.16e10 Drug Manufacturers - …\n11 AMGN    2018       0.827   2.37e10   1.96e10 Drug Manufacturers - …\n12 AGN     2018       0.861   1.58e10   1.36e10 Drug Manufacturers - …\n13 ABBV    2018       0.764   3.28e10   2.50e10 Drug Manufacturers - …\n\nQuestion: join_ticker\nStart with drug_cos\nExtract observations for the ticker SEE QUIZ from drug_cos\nAssign output to the variable drug_cos_subset\n\ndrug_cos_subset  <- drug_cos  %>% \n  ???(??? == \"???\")\n\nDisplay drug_cos_subset\n\n\ndrug_cos_subset\n\n\n\nUse left_join to combine the rows and columns of drug_cos_subset with the columns of health_cos\nAssign the output to combo_df\n\n???  <- drug_cos_subset  %>% \n  left_join(health_cos)\n\nDisplay combo_df\n\n\ncombo_df\n\n\n\nNote: the variables ticker, name, location and industry are the same for all the observations\nAssign the company name to co_name\n\n???  <- combo_df  %>% \n  distinct(name) %>% \n  pull()\n\nAssign the company location to co_location\n\nco_location  <- ???  %>% \n  ???(???)  %>% \n  pull() \n\nAssign the industry to co_industry group\n\nco_industry  <- ???  %>% \n  ???(???)  %>% \n  ???() \n\nPut the r inline commands used in the blanks below. When you knit the document the results of the commands will be displayed in your text.\nThe company ??? is located in ??? and is a member of the ??? industry group.\nStart with combo_df\nSelect variables (in this order): year, grossmargin, netmargin, revenue, gp, netincome\nAssign the output to combo_df_subset\n\ncombo_df_subset  <- combo_df  %>% \n  select(???, ???, ???, \n  ???, ???, ???)\n\nDisplay combo_df_subset\n\n???\n\nCreate the variable grossmargin_check to compare with the variable grossmargin. They should be equal.\ngrossmargin_check = gp / revenue\n\nCreate the variable close_enough to check that the absolute value of the difference between grossmargin_check and grossmargin is less than 0.001\n\ncombo_df_subset  %>% \n  mutate(grossmargin_check = ??? / ???,\n  close_enough = abs(grossmargin_check - grossmargin) < 0.001)\n\nCreate the variable netmargin_check to compare with the variable netmargin. They should be equal.\nCreate the variable close_enough to check that the absolute value of the difference between netmargin_check and netmargin is less than 0.001\n\n???  %>% \n  ???(netmargin_check = ??? / ???,\n  close_enough = ???(netmargin_check - netmargin) < 0.001)\n\nQuestion: summarize_industry\nFill in the blanks\nPut the command you use in the Rchunks in the Rmd file for this quiz\nUse the health_cos data\nFor each industry calculate\nSEE QUIZ = mean(SEE QUIZ / revenue) * 100\nSEE QUIZ = median(SEE QUIZ / revenue) * 100\nSEE QUIZ = min(SEE QUIZ / revenue) * 100\nSEE QUIZ = max(SEE QUIZ / revenue) * 100\n\n\nhealth_cos  %>% \n  group_by(???)  %>% \n  summarize(??? = ???(??? / revenue) * 100,\n            ??? = ???(??? / revenue) * 100,\n            ??? = ???(??? / revenue) * 100,\n            ??? = ???(??? / revenue) * 100\n  ) \n\nSEE QUIZ for the industry SEE QUIZ is ???%\nSEE QUIZ for the industry SEE QUIZ is ???%\nSEE QUIZ for the industry SEE QUIZ is ???%\nSEE QUIZ for the industry SEE QUIZ is ???%\nQuestion: inline_ticker\nFill in the blanks\nUse the health_cos data\nExtract observations for the ticker SEE QUIZ from health_cos and assign to the variable health_cos_subset\n\n\nhealth_cos_subset  <- health_cos  %>% \n  ???(ticker == \"???\")\n\n\n\nDisplay health_cos_subset\n\n\nhealth_cos_subset \n\n\n\nIn the console, type ?distinct. Go to the help pane to see what distinct does\nIn the console, type ?pull. Go to the help pane to see what pull does\n\nRun the code below\n\n\nhealth_cos_subset  %>% \n  distinct(name) %>%  \n  pull(name)\n\n\n\nAssign the output to co_name\n\n???  <- health_cos_subset  %>% \n  distinct(name) %>% \n  pull(name)\n\nYou can take output from your code and include it in your text.\nThe name of the company with ticker SEE QUIZ is ________\nIn following chuck\nAssign the company’s industry group to the variable co_industry\n\nco_industry  <- ???  %>% \n  ???(industry) %>% \n  ???()\n\nThis is outside the R chunk. Put the r inline commands used in the blanks below. When you knit the document the results of the commands will be displayed in your text.\nThe company ??? is a member of the ??? group.\nSteps 7-11\nPrepare the data for the plots\nstart with health_cos THEN\ngroup_by industry THEN\ncalculate the median research and development expenditure as a percent of revenue by industry\nassign the output to df\n\n\ndf <- health_cos  %>% \n  group_by(industry)  %>%\n  summarize(med_rnd_rev = median(rnd/revenue))   \n\n\n\nUse glimpse to glimpse the data for the plots\n\n\ndf  %>% glimpse()\n\n\nRows: 9\nColumns: 2\n$ industry    <chr> \"Biotechnology\", \"Diagnostics & Research\", \"Drug…\n$ med_rnd_rev <dbl> 0.48317287, 0.05620271, 0.17451442, 0.06851879, …\n\nCreate a static bar chart\nuse ggplot to initialize the chart\ndata is df\nthe variable industry is mapped to the x-axis\nreorder it based the value of med_rnd_rev\n\nthe variable med_rnd_rev is mapped to the y-axis\nadd a bar chart using geom_col\nuse scale_y_continuous to label the y-axis with percent\nuse coord_flip() to flip the coordinates\nuse labs to add title, subtitle and remove x and y-axes\nuse theme_ipsum() from the hrbrthemes package to improve the theme\n\n\nggplot(data = df, \n       mapping = aes(\n         x = reorder(industry, med_rnd_rev ),\n         y = med_rnd_rev\n         )) +\n  geom_col() + \n  scale_y_continuous(labels = scales::percent) +\n  coord_flip() +\n  labs(\n    title = \"Median R&D expenditures\",\n    subtitle = \"by industry as a percent of revenue from 2011 to 2018\",\n    x = NULL, y = NULL) +\n  theme_ipsum()\n\n\n\n\nSave the previous plot to preview.png and add to the yaml chunk at the top\n\n\nggsave(filename = \"preview.png\", \n       path = here::here(\"_posts\", \"2021-02-27-joining-data\"))\n\n\n\nCreate an interactive bar chart using the package echarts4r\nstart with the data df\nuse arrange to reorder med_rnd_rev\nuse e_charts to initialize a chart\nthe variable industry is mapped to the x-axis\n\nadd a bar chart using e_bar with the values of med_rnd_rev\nuse e_flip_coords() to flip the coordinates\nuse e_title to add the title and the subtitle\nuse e_legend to remove the legends\nuse e_x_axis to change format of labels on x-axis to percent\nuse e_y_axis to remove labels on y-axis-\nuse e_theme to change the theme. Find more themes here\n\n\ndf  %>% \n  arrange(med_rnd_rev)  %>%\n  e_charts(\n    x = industry\n    )  %>% \n  e_bar(\n    serie = med_rnd_rev, \n    name = \"median\"\n    )  %>%\n  e_flip_coords()  %>% \n  e_tooltip()  %>% \n  e_title(\n    text = \"Median industry R&D expenditures\", \n    subtext = \"by industry as a percent of revenue from 2011 to 2018\",\n    left = \"center\") %>% \n  e_legend(FALSE) %>% \n  e_x_axis(\n    formatter = e_axis_formatter(\"percent\", digits = 0)\n    )  %>%\n  e_y_axis(\n    show = FALSE\n  )  %>% \n  e_theme(\"infographic\")\n\n\n\n{\"x\":{\"theme\":\"infographic\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"xAxis\":[{\"show\":true,\"axisLabel\":{\"formatter\":\"function(value, index) {\\n        var fmt = new Intl.NumberFormat('en', {\\\"style\\\":\\\"percent\\\",\\\"minimumFractionDigits\\\":0,\\\"maximumFractionDigits\\\":0,\\\"currency\\\":\\\"USD\\\"});\\n        return fmt.format(value);\\n    }\"}}],\"yAxis\":[{\"data\":[\"Healthcare Plans\",\"Medical Care Facilities\",\"Medical Distribution\",\"Diagnostics & Research\",\"Medical Instruments & Supplies\",\"Drug Manufacturers - Specialty & Generic\",\"Medical Devices\",\"Drug Manufacturers - General\",\"Biotechnology\"],\"type\":\"category\",\"boundaryGap\":true,\"show\":false}],\"legend\":{\"data\":[\"median\"],\"show\":false,\"type\":\"plain\"},\"series\":[{\"data\":[{\"value\":[\"0.00000000\",\"Healthcare Plans\"]},{\"value\":[\"0.00000000\",\"Medical Care Facilities\"]},{\"value\":[\"0.00000000\",\"Medical Distribution\"]},{\"value\":[\"0.05620271\",\"Diagnostics & Research\"]},{\"value\":[\"0.06410129\",\"Medical Instruments & Supplies\"]},{\"value\":[\"0.06851879\",\"Drug Manufacturers - Specialty & Generic\"]},{\"value\":[\"0.07691338\",\"Medical Devices\"]},{\"value\":[\"0.17451442\",\"Drug Manufacturers - General\"]},{\"value\":[\"0.48317287\",\"Biotechnology\"]}],\"name\":\"median\",\"type\":\"bar\",\"yAxisIndex\":0,\"xAxisIndex\":0,\"coordinateSystem\":\"cartesian2d\"}],\"tooltip\":{\"trigger\":\"item\"},\"title\":[{\"left\":\"center\",\"text\":\"Median industry R&D expenditures\",\"subtext\":\"by industry as a percent of revenue from 2011 to 2018\"}]},\"dispose\":true},\"evals\":[\"opts.xAxis.0.axisLabel.formatter\"],\"jsHooks\":[]}\n\n\n\n",
    "preview": "posts/2021-02-27-joining-data/preview.png",
    "last_modified": "2021-03-09T13:17:21-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-20-data-manipulation/",
    "title": "4: Data Manipulation",
    "description": "Code for Quiz 5. More practice with dplyr functions.",
    "author": [],
    "date": "2021-02-20",
    "categories": [],
    "contents": "\nLoad the R packages we will use.\n\n\nlibrary(tidyverse)\n\n\n\nRead the data in the file, drug_cos.csv in to R and assign it to drug_cos.\n\n\ndrug_cos  <- read_csv(\"https://estanny.com/static/week5/drug_cos.csv\")\n\n\n\nUse glimpse() to get a glimpse of your data.\n\n\nglimpse(drug_cos)\n\n\nRows: 104\nColumns: 9\n$ ticker       <chr> \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS\", \"ZTS…\n$ name         <chr> \"Zoetis Inc\", \"Zoetis Inc\", \"Zoetis Inc\", \"Zoe…\n$ location     <chr> \"New Jersey; U.S.A\", \"New Jersey; U.S.A\", \"New…\n$ ebitdamargin <dbl> 0.149, 0.217, 0.222, 0.238, 0.182, 0.335, 0.36…\n$ grossmargin  <dbl> 0.610, 0.640, 0.634, 0.641, 0.635, 0.659, 0.66…\n$ netmargin    <dbl> 0.058, 0.101, 0.111, 0.122, 0.071, 0.168, 0.16…\n$ ros          <dbl> 0.101, 0.171, 0.176, 0.195, 0.140, 0.286, 0.32…\n$ roe          <dbl> 0.069, 0.113, 0.612, 0.465, 0.285, 0.587, 0.48…\n$ year         <dbl> 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018…\n\nUse distinct() to subset distinct rows.\n\n\ndrug_cos  %>% \n  distinct(year)\n\n\n# A tibble: 8 x 1\n   year\n  <dbl>\n1  2011\n2  2012\n3  2013\n4  2014\n5  2015\n6  2016\n7  2017\n8  2018\n\nUse count() to count observations by group.\n\n\ndrug_cos  %>% \n  count(year)\n\n\n# A tibble: 8 x 2\n   year     n\n* <dbl> <int>\n1  2011    13\n2  2012    13\n3  2013    13\n4  2014    13\n5  2015    13\n6  2016    13\n7  2017    13\n8  2018    13\n\ndrug_cos  %>% \n  count(name)\n\n\n# A tibble: 13 x 2\n   name                        n\n * <chr>                   <int>\n 1 AbbVie Inc                  8\n 2 Allergan plc                8\n 3 Amgen Inc                   8\n 4 Biogen Inc                  8\n 5 Bristol Myers Squibb Co     8\n 6 ELI LILLY & Co              8\n 7 Gilead Sciences Inc         8\n 8 Johnson & Johnson           8\n 9 Merck & Co Inc              8\n10 Mylan NV                    8\n11 PERRIGO Co plc              8\n12 Pfizer Inc                  8\n13 Zoetis Inc                  8\n\ndrug_cos  %>% \n  count(ticker, name)\n\n\n# A tibble: 13 x 3\n   ticker name                        n\n   <chr>  <chr>                   <int>\n 1 ABBV   AbbVie Inc                  8\n 2 AGN    Allergan plc                8\n 3 AMGN   Amgen Inc                   8\n 4 BIIB   Biogen Inc                  8\n 5 BMY    Bristol Myers Squibb Co     8\n 6 GILD   Gilead Sciences Inc         8\n 7 JNJ    Johnson & Johnson           8\n 8 LLY    ELI LILLY & Co              8\n 9 MRK    Merck & Co Inc              8\n10 MYL    Mylan NV                    8\n11 PFE    Pfizer Inc                  8\n12 PRGO   PERRIGO Co plc              8\n13 ZTS    Zoetis Inc                  8\n\nUse filter() to extract rows that meet criteria\nExtract rows in non-consecutive years\n\n\ndrug_cos  %>% \n  filter(year %in% c(2013, 2018))\n\n\n# A tibble: 26 x 9\n   ticker name  location ebitdamargin grossmargin netmargin   ros\n   <chr>  <chr> <chr>           <dbl>       <dbl>     <dbl> <dbl>\n 1 ZTS    Zoet… New Jer…        0.222       0.634     0.111 0.176\n 2 ZTS    Zoet… New Jer…        0.379       0.672     0.245 0.326\n 3 PRGO   PERR… Ireland         0.236       0.362     0.125 0.19 \n 4 PRGO   PERR… Ireland         0.178       0.387     0.028 0.088\n 5 PFE    Pfiz… New Yor…        0.634       0.814     0.427 0.51 \n 6 PFE    Pfiz… New Yor…        0.34        0.79      0.208 0.221\n 7 MYL    Myla… United …        0.228       0.44      0.09  0.153\n 8 MYL    Myla… United …        0.258       0.35      0.031 0.074\n 9 MRK    Merc… New Jer…        0.282       0.615     0.1   0.123\n10 MRK    Merc… New Jer…        0.313       0.681     0.147 0.206\n# … with 16 more rows, and 2 more variables: roe <dbl>, year <dbl>\n\nExtract every other year from 2012 to 2018\n\n\ndrug_cos  %>% \n  filter(year %in% seq(2012, 2018, by = 2))\n\n\n# A tibble: 52 x 9\n   ticker name  location ebitdamargin grossmargin netmargin    ros\n   <chr>  <chr> <chr>           <dbl>       <dbl>     <dbl>  <dbl>\n 1 ZTS    Zoet… New Jer…        0.217       0.64      0.101  0.171\n 2 ZTS    Zoet… New Jer…        0.238       0.641     0.122  0.195\n 3 ZTS    Zoet… New Jer…        0.335       0.659     0.168  0.286\n 4 ZTS    Zoet… New Jer…        0.379       0.672     0.245  0.326\n 5 PRGO   PERR… Ireland         0.226       0.345     0.127  0.183\n 6 PRGO   PERR… Ireland         0.157       0.371     0.059  0.104\n 7 PRGO   PERR… Ireland        -0.791       0.389    -0.76  -0.877\n 8 PRGO   PERR… Ireland         0.178       0.387     0.028  0.088\n 9 PFE    Pfiz… New Yor…        0.447       0.82      0.267  0.307\n10 PFE    Pfiz… New Yor…        0.359       0.807     0.184  0.247\n# … with 42 more rows, and 2 more variables: roe <dbl>, year <dbl>\n\nExtract the tickers “PFE” and “MYL”\n\n\ndrug_cos  %>% \n  filter(ticker %in% c(\"PFE\", \"MYL\"))\n\n\n# A tibble: 16 x 9\n   ticker name  location ebitdamargin grossmargin netmargin   ros\n   <chr>  <chr> <chr>           <dbl>       <dbl>     <dbl> <dbl>\n 1 PFE    Pfiz… New Yor…        0.371       0.795     0.164 0.223\n 2 PFE    Pfiz… New Yor…        0.447       0.82      0.267 0.307\n 3 PFE    Pfiz… New Yor…        0.634       0.814     0.427 0.51 \n 4 PFE    Pfiz… New Yor…        0.359       0.807     0.184 0.247\n 5 PFE    Pfiz… New Yor…        0.289       0.803     0.142 0.183\n 6 PFE    Pfiz… New Yor…        0.267       0.767     0.137 0.158\n 7 PFE    Pfiz… New Yor…        0.353       0.786     0.406 0.233\n 8 PFE    Pfiz… New Yor…        0.34        0.79      0.208 0.221\n 9 MYL    Myla… United …        0.245       0.418     0.088 0.161\n10 MYL    Myla… United …        0.244       0.428     0.094 0.163\n11 MYL    Myla… United …        0.228       0.44      0.09  0.153\n12 MYL    Myla… United …        0.242       0.457     0.12  0.169\n13 MYL    Myla… United …        0.243       0.447     0.09  0.133\n14 MYL    Myla… United …        0.19        0.424     0.043 0.052\n15 MYL    Myla… United …        0.272       0.402     0.058 0.121\n16 MYL    Myla… United …        0.258       0.35      0.031 0.074\n# … with 2 more variables: roe <dbl>, year <dbl>\n\nUse select() to select, rename and reorder columns\nSelect columns ticker, name and ros\n\n\ndrug_cos  %>% \n  select(ticker, name, ros)\n\n\n# A tibble: 104 x 3\n   ticker name             ros\n   <chr>  <chr>          <dbl>\n 1 ZTS    Zoetis Inc     0.101\n 2 ZTS    Zoetis Inc     0.171\n 3 ZTS    Zoetis Inc     0.176\n 4 ZTS    Zoetis Inc     0.195\n 5 ZTS    Zoetis Inc     0.14 \n 6 ZTS    Zoetis Inc     0.286\n 7 ZTS    Zoetis Inc     0.321\n 8 ZTS    Zoetis Inc     0.326\n 9 PRGO   PERRIGO Co plc 0.178\n10 PRGO   PERRIGO Co plc 0.183\n# … with 94 more rows\n\nUse select to exclude columns ticker, name and ros\n\n\ndrug_cos  %>% \n  select(-ticker, -name, -ros)\n\n\n# A tibble: 104 x 6\n   location          ebitdamargin grossmargin netmargin   roe  year\n   <chr>                    <dbl>       <dbl>     <dbl> <dbl> <dbl>\n 1 New Jersey; U.S.A        0.149       0.61      0.058 0.069  2011\n 2 New Jersey; U.S.A        0.217       0.64      0.101 0.113  2012\n 3 New Jersey; U.S.A        0.222       0.634     0.111 0.612  2013\n 4 New Jersey; U.S.A        0.238       0.641     0.122 0.465  2014\n 5 New Jersey; U.S.A        0.182       0.635     0.071 0.285  2015\n 6 New Jersey; U.S.A        0.335       0.659     0.168 0.587  2016\n 7 New Jersey; U.S.A        0.366       0.666     0.163 0.488  2017\n 8 New Jersey; U.S.A        0.379       0.672     0.245 0.694  2018\n 9 Ireland                  0.216       0.343     0.123 0.248  2011\n10 Ireland                  0.226       0.345     0.127 0.236  2012\n# … with 94 more rows\n\nRename and reorder columns with select\nstart with drug_cos THEN\nchange the name of location to headquarter\nput the columns in this order: year, ticker, headquarter, netmargin, roe\n\n\ndrug_cos  %>% \n  select(year, ticker, headquarter =location, netmargin, roe )\n\n\n# A tibble: 104 x 5\n    year ticker headquarter       netmargin   roe\n   <dbl> <chr>  <chr>                 <dbl> <dbl>\n 1  2011 ZTS    New Jersey; U.S.A     0.058 0.069\n 2  2012 ZTS    New Jersey; U.S.A     0.101 0.113\n 3  2013 ZTS    New Jersey; U.S.A     0.111 0.612\n 4  2014 ZTS    New Jersey; U.S.A     0.122 0.465\n 5  2015 ZTS    New Jersey; U.S.A     0.071 0.285\n 6  2016 ZTS    New Jersey; U.S.A     0.168 0.587\n 7  2017 ZTS    New Jersey; U.S.A     0.163 0.488\n 8  2018 ZTS    New Jersey; U.S.A     0.245 0.694\n 9  2011 PRGO   Ireland               0.123 0.248\n10  2012 PRGO   Ireland               0.127 0.236\n# … with 94 more rows\n\nQuestion: filter and select\nUse inputs from your quiz question filter and select and replace SEE QUIZ with inputs from your quiz and replace the ??? in the code\nstart with drug_cos THEN\nextract information for the tickers PFE, MRK, BMY THEN\nselect the variables ticker, year and ros\n\n\ndrug_cos  %>% \n  filter(ticker %in% c(\"PFE\", \"MRK\", \"BMY\"))  %>% \n  select(ticker, year, ros)\n\n\n# A tibble: 24 x 3\n   ticker  year   ros\n   <chr>  <dbl> <dbl>\n 1 PFE     2011 0.223\n 2 PFE     2012 0.307\n 3 PFE     2013 0.51 \n 4 PFE     2014 0.247\n 5 PFE     2015 0.183\n 6 PFE     2016 0.158\n 7 PFE     2017 0.233\n 8 PFE     2018 0.221\n 9 MRK     2011 0.15 \n10 MRK     2012 0.182\n# … with 14 more rows\n\nQuestion: rename\nstart with drug_cos THEN\nextract information for the tickers AGN, ZTS THEN\nselect the variables ticker, netmargin and roe. Change the name of roe to return_on_equity\n\ndrug_cos  %>% \n  ???(??? %in% c(\"???\", \"???\"))  %>% \n  ???(ticker, ???, ??? = roe)\n\nselect ranges of columns\nby name\n\n\ndrug_cos  %>% \n  select(ebitdamargin:netmargin)\n\n\n# A tibble: 104 x 3\n   ebitdamargin grossmargin netmargin\n          <dbl>       <dbl>     <dbl>\n 1        0.149       0.61      0.058\n 2        0.217       0.64      0.101\n 3        0.222       0.634     0.111\n 4        0.238       0.641     0.122\n 5        0.182       0.635     0.071\n 6        0.335       0.659     0.168\n 7        0.366       0.666     0.163\n 8        0.379       0.672     0.245\n 9        0.216       0.343     0.123\n10        0.226       0.345     0.127\n# … with 94 more rows\n\nby position\n\n\ndrug_cos  %>% \n  select(4:6)\n\n\n# A tibble: 104 x 3\n   ebitdamargin grossmargin netmargin\n          <dbl>       <dbl>     <dbl>\n 1        0.149       0.61      0.058\n 2        0.217       0.64      0.101\n 3        0.222       0.634     0.111\n 4        0.238       0.641     0.122\n 5        0.182       0.635     0.071\n 6        0.335       0.659     0.168\n 7        0.366       0.666     0.163\n 8        0.379       0.672     0.245\n 9        0.216       0.343     0.123\n10        0.226       0.345     0.127\n# … with 94 more rows\n\nselect helper functions\nstarts_with(\"abc\") matches columns start with “abc”\nends_with(\"abc\") matches columns end with “abc”\ncontains(\"abc\") matches columns contain “abc”\n\n\ndrug_cos  %>% \n  select(ticker, contains(\"locat\"))\n\n\n# A tibble: 104 x 2\n   ticker location         \n   <chr>  <chr>            \n 1 ZTS    New Jersey; U.S.A\n 2 ZTS    New Jersey; U.S.A\n 3 ZTS    New Jersey; U.S.A\n 4 ZTS    New Jersey; U.S.A\n 5 ZTS    New Jersey; U.S.A\n 6 ZTS    New Jersey; U.S.A\n 7 ZTS    New Jersey; U.S.A\n 8 ZTS    New Jersey; U.S.A\n 9 PRGO   Ireland          \n10 PRGO   Ireland          \n# … with 94 more rows\n\ndrug_cos  %>% \n  select(ticker, starts_with(\"r\"))\n\n\n# A tibble: 104 x 3\n   ticker   ros   roe\n   <chr>  <dbl> <dbl>\n 1 ZTS    0.101 0.069\n 2 ZTS    0.171 0.113\n 3 ZTS    0.176 0.612\n 4 ZTS    0.195 0.465\n 5 ZTS    0.14  0.285\n 6 ZTS    0.286 0.587\n 7 ZTS    0.321 0.488\n 8 ZTS    0.326 0.694\n 9 PRGO   0.178 0.248\n10 PRGO   0.183 0.236\n# … with 94 more rows\n\ndrug_cos  %>% \n  select(year, ends_with(\"margin\"))\n\n\n# A tibble: 104 x 4\n    year ebitdamargin grossmargin netmargin\n   <dbl>        <dbl>       <dbl>     <dbl>\n 1  2011        0.149       0.61      0.058\n 2  2012        0.217       0.64      0.101\n 3  2013        0.222       0.634     0.111\n 4  2014        0.238       0.641     0.122\n 5  2015        0.182       0.635     0.071\n 6  2016        0.335       0.659     0.168\n 7  2017        0.366       0.666     0.163\n 8  2018        0.379       0.672     0.245\n 9  2011        0.216       0.343     0.123\n10  2012        0.226       0.345     0.127\n# … with 94 more rows\n\nUse group_by to set up data for operations by group\ngroup_by\n\n\ndrug_cos  %>% \n  group_by(ticker)\n\n\n# A tibble: 104 x 9\n# Groups:   ticker [13]\n   ticker name  location ebitdamargin grossmargin netmargin   ros\n   <chr>  <chr> <chr>           <dbl>       <dbl>     <dbl> <dbl>\n 1 ZTS    Zoet… New Jer…        0.149       0.61      0.058 0.101\n 2 ZTS    Zoet… New Jer…        0.217       0.64      0.101 0.171\n 3 ZTS    Zoet… New Jer…        0.222       0.634     0.111 0.176\n 4 ZTS    Zoet… New Jer…        0.238       0.641     0.122 0.195\n 5 ZTS    Zoet… New Jer…        0.182       0.635     0.071 0.14 \n 6 ZTS    Zoet… New Jer…        0.335       0.659     0.168 0.286\n 7 ZTS    Zoet… New Jer…        0.366       0.666     0.163 0.321\n 8 ZTS    Zoet… New Jer…        0.379       0.672     0.245 0.326\n 9 PRGO   PERR… Ireland         0.216       0.343     0.123 0.178\n10 PRGO   PERR… Ireland         0.226       0.345     0.127 0.183\n# … with 94 more rows, and 2 more variables: roe <dbl>, year <dbl>\n\ndrug_cos  %>% \n  group_by(year)\n\n\n# A tibble: 104 x 9\n# Groups:   year [8]\n   ticker name  location ebitdamargin grossmargin netmargin   ros\n   <chr>  <chr> <chr>           <dbl>       <dbl>     <dbl> <dbl>\n 1 ZTS    Zoet… New Jer…        0.149       0.61      0.058 0.101\n 2 ZTS    Zoet… New Jer…        0.217       0.64      0.101 0.171\n 3 ZTS    Zoet… New Jer…        0.222       0.634     0.111 0.176\n 4 ZTS    Zoet… New Jer…        0.238       0.641     0.122 0.195\n 5 ZTS    Zoet… New Jer…        0.182       0.635     0.071 0.14 \n 6 ZTS    Zoet… New Jer…        0.335       0.659     0.168 0.286\n 7 ZTS    Zoet… New Jer…        0.366       0.666     0.163 0.321\n 8 ZTS    Zoet… New Jer…        0.379       0.672     0.245 0.326\n 9 PRGO   PERR… Ireland         0.216       0.343     0.123 0.178\n10 PRGO   PERR… Ireland         0.226       0.345     0.127 0.183\n# … with 94 more rows, and 2 more variables: roe <dbl>, year <dbl>\n\nUse summarize to calculate summary statistics\nMaximum roe for all companies\n\n\ndrug_cos  %>% \n    summarize( max_roe = max(roe)) \n\n\n# A tibble: 1 x 1\n  max_roe\n    <dbl>\n1    1.31\n\nmaximum roe for each year\n\n\ndrug_cos  %>% \n  group_by(year)  %>% \n  summarize( max_roe = max(roe)) \n\n\n# A tibble: 8 x 2\n   year max_roe\n* <dbl>   <dbl>\n1  2011   0.451\n2  2012   0.69 \n3  2013   1.13 \n4  2014   0.828\n5  2015   1.31 \n6  2016   1.11 \n7  2017   0.932\n8  2018   0.694\n\nmaximum roe for each ticker\n\n\ndrug_cos  %>% \n  group_by(ticker)  %>% \n  summarize( max_roe = max(roe)) \n\n\n# A tibble: 13 x 2\n   ticker max_roe\n * <chr>    <dbl>\n 1 ABBV     1.31 \n 2 AGN      0.184\n 3 AMGN     0.585\n 4 BIIB     0.334\n 5 BMY      0.373\n 6 GILD     1.04 \n 7 JNJ      0.244\n 8 LLY      0.306\n 9 MRK      0.248\n10 MYL      0.283\n11 PFE      0.342\n12 PRGO     0.248\n13 ZTS      0.694\n\nQuestion: summarize\nMean for year\nFind the mean SEE QUIZ for each year and call the variable mean_SEE QUIZ\nExtract the mean for SEE QUIZ\n\ndrug_cos  %>% \n  ???(???)  %>% \n  ???(??? = ???(???))  %>% \n  filter( year == ???)\n\nThe mean ros for 2016 is ??? or ???%\nMedian for year\nFind the median SEE QUIZ for each year and call the variable median_SEE QUIZ\nExtract the median for SEE QUIZ\n\ndrug_cos  %>% \n  ???(???)  %>% \n  ???(??? = ???(???))  %>% \n  filter(year == ???)\n\nThe median SEE QUIZ for SEE QUIZ is: ??? or ???%\nPick a ratio and a year and compare the companies.\n\n\ndrug_cos  %>% \n filter(year == 2018)  %>% \n ggplot(aes(x = netmargin, y = reorder(name, netmargin))) +\n geom_col() +\n  scale_x_continuous(labels = scales::percent) +\n  labs(title = \"Comparision of net margin\",\n       subtitle = \"for drug companies during 2018\", \n       x = NULL, y = NULL) +\n  theme_classic() \n\n\n\n\nPick a company and a ratio and compare the ratio over time.\n\n\ndrug_cos  %>% \n filter(ticker == \"PFE\")  %>% \n ggplot(aes(x = year, y = netmargin)) +\n geom_col() +\n  scale_y_continuous(labels = scales::percent) +\n  labs(title = \"Comparision of net margin\",\n       subtitle = \"for Pfizer from 2011 to 2018\", \n       x = NULL, y = NULL) +\n  theme_classic() \n\n\n\nggsave(filename = \"preview.png\", \n       path = here::here(\"_posts\", \"2021-02-20-data-manipulation\"))\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-20-data-manipulation/preview.png",
    "last_modified": "2021-02-21T21:32:53-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-13-reading-and-writing-data/",
    "title": "3: Reading and writing data",
    "description": "Practice reading and writing data, more dplyr and a plot.",
    "author": [],
    "date": "2021-02-13",
    "categories": [],
    "contents": "\nLoad the R packages we will use.\n\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor) # make sure you install\nlibrary(skimr)\n\n\n\nDownload \\(CO_2\\) emissions per capita from Our World in Data into the directory for this post.\nAssign the location of the file to file_csv. The data should be in the same directory as this file\nRead the data into R and assign it to emissions\n\n\nfile_csv  <- here(\"_posts\", \n                  \"2021-02-13-reading-and-writing-data\", \n                  \"co-emissions-per-capita.csv\") \n\nemissions  <- read_csv(file_csv)\n\n\n\nShow the first 10 rows (observations of) emissions\n\n\nemissions  \n\n\n# A tibble: 22,383 x 4\n   Entity      Code   Year `Per capita CO2 emissions`\n   <chr>       <chr> <dbl>                      <dbl>\n 1 Afghanistan AFG    1949                    0.00191\n 2 Afghanistan AFG    1950                    0.0109 \n 3 Afghanistan AFG    1951                    0.0117 \n 4 Afghanistan AFG    1952                    0.0115 \n 5 Afghanistan AFG    1953                    0.0132 \n 6 Afghanistan AFG    1954                    0.0130 \n 7 Afghanistan AFG    1955                    0.0186 \n 8 Afghanistan AFG    1956                    0.0218 \n 9 Afghanistan AFG    1957                    0.0343 \n10 Afghanistan AFG    1958                    0.0380 \n# … with 22,373 more rows\n\nStart with emissions data THEN\nuse clean_names from the janitor package to make the names easier to work with\nassign the output to tidy_emissions\nshow the first 10 rows of tidy_emissions\n\n\ntidy_emissions   <- emissions %>% \n  clean_names()\n\ntidy_emissions\n\n\n# A tibble: 22,383 x 4\n   entity      code   year per_capita_co2_emissions\n   <chr>       <chr> <dbl>                    <dbl>\n 1 Afghanistan AFG    1949                  0.00191\n 2 Afghanistan AFG    1950                  0.0109 \n 3 Afghanistan AFG    1951                  0.0117 \n 4 Afghanistan AFG    1952                  0.0115 \n 5 Afghanistan AFG    1953                  0.0132 \n 6 Afghanistan AFG    1954                  0.0130 \n 7 Afghanistan AFG    1955                  0.0186 \n 8 Afghanistan AFG    1956                  0.0218 \n 9 Afghanistan AFG    1957                  0.0343 \n10 Afghanistan AFG    1958                  0.0380 \n# … with 22,373 more rows\n\nStart with the tidy_emissions THEN\nuse filter to extract rows with year == 2019 THEN\nuse skim to calculate the descriptive statistics\n\n\ntidy_emissions  %>% \n  filter(year == 2019)  %>% \n  skim()\n\n\nTable 1: Data summary\nName\nPiped data\nNumber of rows\n221\nNumber of columns\n4\n_______________________\n\nColumn type frequency:\n\ncharacter\n2\nnumeric\n2\n________________________\n\nGroup variables\nNone\nVariable type: character\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\nentity\n0\n1.00\n4\n32\n0\n221\n0\ncode\n13\n0.94\n3\n8\n0\n208\n0\nVariable type: numeric\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\nyear\n0\n1\n2019\n0.00\n2019.00\n2019.00\n2019.00\n2019.00\n2019.00\n▁▁▇▁▁\nper_capita_co2_emissions\n0\n1\n5\n5.71\n0.03\n1.12\n3.53\n6.56\n38.61\n▇▂▁▁▁\n\n13 observations have a missing code. How are these observations different?\nstart with tidy_emissions then extract rows with year == 2019 and are missing a code\n\n\ntidy_emissions  %>% \n  filter(year == 2019, is.na(code))  \n\n\n# A tibble: 13 x 4\n   entity                     code   year per_capita_co2_emissions\n   <chr>                      <chr> <dbl>                    <dbl>\n 1 Africa                     <NA>   2019                     1.12\n 2 Asia                       <NA>   2019                     4.40\n 3 Asia (excl. China & India) <NA>   2019                     4.14\n 4 EU-27                      <NA>   2019                     6.56\n 5 EU-28                      <NA>   2019                     6.41\n 6 Europe                     <NA>   2019                     7.28\n 7 Europe (excl. EU-27)       <NA>   2019                     8.33\n 8 Europe (excl. EU-28)       <NA>   2019                     9.14\n 9 International transport    <NA>   2019                     4.58\n10 North America              <NA>   2019                    11.0 \n11 North America (excl. USA)  <NA>   2019                     4.63\n12 Oceania                    <NA>   2019                    11.2 \n13 South America              <NA>   2019                     2.54\n\nEntities that are not countries do not have country codes.\nStart with tidy_emissions THEN\nuse filter to extract rows with year == 2019 and without missing codes THEN\nuse select to drop the year variable THEN\nuse rename to change the variable entity to country\nassign the output to emissions_2019\n\n\nemissions_2019  <- tidy_emissions  %>% \n  filter(year == 2019, !is.na(code))   %>% \n  select(-year)  %>% \n  rename(country = entity)\n\n\n\nWhich 15 countries have the highest per_capita_co2_emissions?\nstart with emissions_2019 THEN\nuse slice_max to extract the 15 rows with the per_capita_co2_emissions\nassign the output to max_15_emitters\n\n\nmax_15_emitters  <- emissions_2019  %>% \n  slice_max(per_capita_co2_emissions, n = 15)\n\n\n\nWhich 15 countries have the lowest per_capita_co2_emissions?\nstart with emissions_2019 THEN\nuse slice_min to extract the 15 rows with the lowest values\nassign the output to min_15_emitters\n\n\nmin_15_emitters  <- emissions_2019  %>% \n  slice_min(per_capita_co2_emissions, n = 15)\n\n\n\nUse bind_rows to bind together the max_15_emitters and min_15_emitters\nassign the output to max_min_15\n\n\nmax_min_15  <- bind_rows(max_15_emitters, min_15_emitters)\n\n\n\nExport max_min_15 to 3 file formats\n\n\nmax_min_15  %>% write_csv(\"max_min_15.csv\") # comma-separated values\nmax_min_15  %>% write_tsv(\"max_min_15.tsv\")  # tab separated\nmax_min_15  %>% write_delim(\"max_min_15.psv\", delim = \"|\") # pipe-separated\n\n\n\nRead the 3 file formats into R\n\n\nmax_min_15_csv <-  read_csv(\"max_min_15.csv\") # comma-separated values\nmax_min_15_tsv <-  read_tsv(\"max_min_15.tsv\")  # tab separated\nmax_min_15_psv <-  read_delim(\"max_min_15.psv\", delim = \"|\") # pipe-separated\n\n\n\nUse setdiff to check for any differences among max_min_15_csv, max_min_15_tsv and max_min_15_psv\n\n\nsetdiff(max_min_15_csv, max_min_15_tsv, max_min_15_psv)\n\n\n# A tibble: 0 x 3\n# … with 3 variables: country <chr>, code <chr>,\n#   per_capita_co2_emissions <dbl>\n\nAre there any differences?\nReorder country in max_min_15 for plotting and assign to max_min_15_plot_data\nstart with emissions_2019 THEN\nuse mutate to reorder country according to per_capital_co2_emissions\n\n\nmax_min_15_plot_data  <- max_min_15 %>%\n  mutate(country = reorder(country, per_capita_co2_emissions))  \n\n\n\nPlot max_min_15_plot_data\n\n\nggplot(data = max_min_15_plot_data, \n       mapping = aes(x= per_capita_co2_emissions, y = country)) +\n  geom_col() +\n  labs(title = \"The top 15 and bottom 15 per capita CO2 emissions\",\n       subtitle = \"for 2019\", \n       x = NULL, \n       y = NULL)  \n\n\n\n\nSave the plot directory with this post\n\n\nggsave(filename = \"preview.png\", \n       path = here(\"_posts\", \"2021-02-13-reading-and-writing-data\"))\n\n\n\nAdd preview.png to yaml chuck at the top of this file\npreview: preview.png\n\n\n\n",
    "preview": "posts/2021-02-13-reading-and-writing-data/preview.png",
    "last_modified": "2021-02-14T22:30:30-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-06-introduction-to-dplyr/",
    "title": "2: Introduction to dplyr",
    "description": "Code and text for Quiz 3.",
    "author": [],
    "date": "2021-02-06",
    "categories": [],
    "contents": "\nLoad the packages that we need.\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(here)\n\n\n\nRead the data into R.\n\n\ncorp_tax  <- read_excel(here(\"corp_tax.xlsx\"))\n\n\n\nLet’s look at NVR in the corp_tax tibble.\n\n\nresult  <- corp_tax  %>% \n  filter(company == 'NVR')\n\nresult\n\n\n# A tibble: 1 x 5\n  company profit   tax tax_rate industry                  \n  <chr>    <dbl> <dbl>    <dbl> <chr>                     \n1 NVR       923.  126.    0.137 Engineering & construction\n\nNVR is in the Engineering & construction industry. It had profit of $922.694 million and tax of $126.358 million. Its tax rate was 13.7%.\nLet’s find the company in the Utilities, gas and electric industry with the highest profit\n\n\nresult  <- corp_tax  %>% \n  filter(industry == 'Utilities, gas and electric')  %>% \n  slice_max(profit, n=1)\nresult\n\n\n# A tibble: 1 x 5\n  company        profit   tax tax_rate industry                   \n  <chr>           <dbl> <dbl>    <dbl> <chr>                      \n1 NextEra Energy   7289    30  0.00412 Utilities, gas and electric\n\nNextEra Energy is the company in Utilities, gas and electric industry with the highest profit. It had profit of $7289 million and tax of $30 million. Its tax rate was 0.4%.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-14T22:29:49-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-28-summary-statistics/",
    "title": "1: Summary statistics",
    "description": "Comparison of R and Excel",
    "author": [],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\nLoad packages we will need using the library command\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\n\n\n\nRead corporate tax spreadsheet into an R dataframe.\n\n\nurl <- \"https://estanny.com/static/week2/corp_tax.xlsx\"\ndestfile <- \"corp_tax.xlsx\"\ncurl::curl_download(url, destfile)\ncorp_tax <- read_excel(destfile)\n\n\n\nUse the function skim to calculate descriptive statistics.\n\n\nskim(corp_tax)\n\n\nTable 1: Data summary\nName\ncorp_tax\nNumber of rows\n379\nNumber of columns\n5\n_______________________\n\nColumn type frequency:\n\ncharacter\n2\nnumeric\n3\n________________________\n\nGroup variables\nNone\nVariable type: character\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\ncompany\n0\n1\n2\n38\n0\n379\n0\nindustry\n0\n1\n9\n39\n0\n22\n0\nVariable type: numeric\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\nprofit\n0\n1\n2020.28\n3764.71\n6.80\n348.56\n850.30\n2045.55\n31414.00\n▇▁▁▁▁\ntax\n0\n1\n229.14\n554.96\n-647.00\n0.90\n44.45\n214.95\n4718.00\n▇▁▁▁▁\ntax_rate\n0\n1\n0.07\n0.21\n-1.68\n0.00\n0.10\n0.18\n0.61\n▁▁▁▇▅\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-14T22:29:13-08:00",
    "input_file": {}
  }
]
